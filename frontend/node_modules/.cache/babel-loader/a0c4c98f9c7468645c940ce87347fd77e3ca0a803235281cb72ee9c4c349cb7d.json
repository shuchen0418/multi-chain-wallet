{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\code\\\\multi-chain-wallet\\\\frontend\\\\src\\\\components\\\\WalletCard.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Flex, Text, Badge, Button, useColorModeValue } from '@chakra-ui/react';\nimport { ChainType } from '../types';\n\n// 获取链类型的显示名称\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getChainName = chainType => {\n  switch (chainType) {\n    case ChainType.Ethereum:\n      return 'Ethereum';\n    case ChainType.BSC:\n      return 'BSC';\n    case ChainType.Polygon:\n      return 'Polygon';\n    default:\n      return 'Unknown';\n  }\n};\n\n// 获取链类型的颜色\nconst getChainColor = chainType => {\n  switch (chainType) {\n    case ChainType.Ethereum:\n      return 'blue';\n    case ChainType.BSC:\n      return 'yellow';\n    case ChainType.Polygon:\n      return 'purple';\n    default:\n      return 'gray';\n  }\n};\nconst WalletCard = ({\n  wallet,\n  isSelected,\n  onSelect,\n  onViewDetails\n}) => {\n  _s();\n  const bgColor = useColorModeValue('white', 'gray.800');\n  const borderColor = isSelected ? 'blue.500' : useColorModeValue('gray.200', 'gray.700');\n\n  // 获取创建时间的格式化显示\n  const formattedDate = new Date(wallet.createTime * 1000).toLocaleDateString();\n\n  // 地址显示格式化（只显示前6位和后4位）\n  const formatAddress = address => {\n    if (!address || address.length < 10) return address;\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    borderWidth: \"1px\",\n    borderRadius: \"lg\",\n    borderColor: borderColor,\n    overflow: \"hidden\",\n    p: 4,\n    bg: bgColor,\n    boxShadow: isSelected ? 'md' : 'sm',\n    cursor: \"pointer\",\n    onClick: () => onSelect(wallet),\n    _hover: {\n      boxShadow: 'md'\n    },\n    transition: \"all 0.2s\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Badge, {\n        colorScheme: getChainColor(wallet.chainType),\n        children: getChainName(wallet.chainType)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"sm\",\n        color: \"gray.500\",\n        children: formattedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      fontWeight: \"bold\",\n      isTruncated: true,\n      children: formatAddress(wallet.address)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"sm\",\n      color: \"gray.500\",\n      mt: 1,\n      isTruncated: true,\n      children: [\"ID: \", wallet.id.substring(0, 8), \"...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"flex-end\",\n      mt: 3,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        colorScheme: \"blue\",\n        variant: \"outline\",\n        onClick: e => {\n          e.stopPropagation();\n          onViewDetails(wallet);\n        },\n        children: \"\\u8BE6\\u60C5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletCard, \"vzw7ibM7avCLzcaHk3rSw4K2o78=\", false, function () {\n  return [useColorModeValue, useColorModeValue];\n});\n_c = WalletCard;\nexport default WalletCard;\nvar _c;\n$RefreshReg$(_c, \"WalletCard\");","map":{"version":3,"names":["React","Box","Flex","Text","Badge","Button","useColorModeValue","ChainType","jsxDEV","_jsxDEV","getChainName","chainType","Ethereum","BSC","Polygon","getChainColor","WalletCard","wallet","isSelected","onSelect","onViewDetails","_s","bgColor","borderColor","formattedDate","Date","createTime","toLocaleDateString","formatAddress","address","length","substring","borderWidth","borderRadius","overflow","p","bg","boxShadow","cursor","onClick","_hover","transition","children","justifyContent","alignItems","mb","colorScheme","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","color","fontWeight","isTruncated","mt","id","size","variant","e","stopPropagation","_c","$RefreshReg$"],"sources":["D:/Desktop/code/multi-chain-wallet/frontend/src/components/WalletCard.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Box, Flex, Text, Badge, Button, useColorModeValue } from '@chakra-ui/react';\r\nimport { Wallet, ChainType } from '../types';\r\n\r\n// 获取链类型的显示名称\r\nconst getChainName = (chainType: ChainType): string => {\r\n  switch (chainType) {\r\n    case ChainType.Ethereum:\r\n      return 'Ethereum';\r\n    case ChainType.BSC:\r\n      return 'BSC';\r\n    case ChainType.Polygon:\r\n      return 'Polygon';\r\n    default:\r\n      return 'Unknown';\r\n  }\r\n};\r\n\r\n// 获取链类型的颜色\r\nconst getChainColor = (chainType: ChainType): string => {\r\n  switch (chainType) {\r\n    case ChainType.Ethereum:\r\n      return 'blue';\r\n    case ChainType.BSC:\r\n      return 'yellow';\r\n    case ChainType.Polygon:\r\n      return 'purple';\r\n    default:\r\n      return 'gray';\r\n  }\r\n};\r\n\r\ninterface WalletCardProps {\r\n  wallet: Wallet;\r\n  isSelected: boolean;\r\n  onSelect: (wallet: Wallet) => void;\r\n  onViewDetails: (wallet: Wallet) => void;\r\n}\r\n\r\nconst WalletCard: React.FC<WalletCardProps> = ({\r\n  wallet,\r\n  isSelected,\r\n  onSelect,\r\n  onViewDetails,\r\n}) => {\r\n  const bgColor = useColorModeValue('white', 'gray.800');\r\n  const borderColor = isSelected ? 'blue.500' : useColorModeValue('gray.200', 'gray.700');\r\n  \r\n  // 获取创建时间的格式化显示\r\n  const formattedDate = new Date(wallet.createTime * 1000).toLocaleDateString();\r\n\r\n  // 地址显示格式化（只显示前6位和后4位）\r\n  const formatAddress = (address: string): string => {\r\n    if (!address || address.length < 10) return address;\r\n    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      borderWidth=\"1px\"\r\n      borderRadius=\"lg\"\r\n      borderColor={borderColor}\r\n      overflow=\"hidden\"\r\n      p={4}\r\n      bg={bgColor}\r\n      boxShadow={isSelected ? 'md' : 'sm'}\r\n      cursor=\"pointer\"\r\n      onClick={() => onSelect(wallet)}\r\n      _hover={{ boxShadow: 'md' }}\r\n      transition=\"all 0.2s\"\r\n    >\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\r\n        <Badge colorScheme={getChainColor(wallet.chainType)}>{getChainName(wallet.chainType)}</Badge>\r\n        <Text fontSize=\"sm\" color=\"gray.500\">\r\n          {formattedDate}\r\n        </Text>\r\n      </Flex>\r\n\r\n      <Text fontWeight=\"bold\" isTruncated>\r\n        {formatAddress(wallet.address)}\r\n      </Text>\r\n\r\n      <Text fontSize=\"sm\" color=\"gray.500\" mt={1} isTruncated>\r\n        ID: {wallet.id.substring(0, 8)}...\r\n      </Text>\r\n\r\n      <Flex justifyContent=\"flex-end\" mt={3}>\r\n        <Button\r\n          size=\"sm\"\r\n          colorScheme=\"blue\"\r\n          variant=\"outline\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            onViewDetails(wallet);\r\n          }}\r\n        >\r\n          详情\r\n        </Button>\r\n      </Flex>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default WalletCard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}