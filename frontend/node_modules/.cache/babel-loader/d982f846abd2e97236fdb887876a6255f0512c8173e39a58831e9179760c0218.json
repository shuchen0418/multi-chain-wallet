{"ast":null,"code":"import api from './apiClient';\n// 钱包接口API\nexport const walletApi = {\n  // 创建钱包\n  createWallet: async data => {\n    const response = await api.post('/wallets', data);\n    if (response.code === 0) {\n      return response.data;\n    } else {\n      throw new Error(response.message);\n    }\n  },\n  // 从助记词导入钱包\n  importFromMnemonic: data => {\n    return api.post('/wallets/import/mnemonic', data);\n  },\n  // 从私钥导入钱包\n  importFromPrivateKey: data => {\n    return api.post('/wallets/import/private-key', data);\n  },\n  // 获取钱包列表\n  getWallets: () => {\n    return api.get('/wallets');\n  },\n  // 获取钱包详情\n  getWallet: walletId => {\n    return api.get(`/wallets/${walletId}`);\n  },\n  // 获取地址余额\n  getBalance: (address, chainType) => {\n    return api.get(`/balances/${address}`, {\n      params: {\n        chainType\n      }\n    });\n  },\n  // 获取代币余额\n  getTokenBalance: (address, tokenAddress, chainType) => {\n    return api.get(`/balances/${address}/token/${tokenAddress}`, {\n      params: {\n        chainType\n      }\n    });\n  },\n  // 创建交易\n  createTransaction: data => {\n    return api.post('/transactions/create', data);\n  },\n  // 签名交易\n  signTransaction: data => {\n    return api.post('/transactions/sign', data);\n  },\n  // 发送交易\n  sendTransaction: data => {\n    return api.post('/transactions/send', data);\n  },\n  // 获取交易状态\n  getTransactionStatus: (txHash, chainType) => {\n    return api.get(`/transactions/${txHash}/status`, {\n      params: {\n        chainType\n      }\n    });\n  },\n  // 获取交易历史\n  getTransactionHistory: (address, chainType) => {\n    return api.get(`/transactions`, {\n      params: {\n        address,\n        chainType\n      }\n    });\n  }\n};\nexport default walletApi;","map":{"version":3,"names":["api","walletApi","createWallet","data","response","post","code","Error","message","importFromMnemonic","importFromPrivateKey","getWallets","get","getWallet","walletId","getBalance","address","chainType","params","getTokenBalance","tokenAddress","createTransaction","signTransaction","sendTransaction","getTransactionStatus","txHash","getTransactionHistory"],"sources":["D:/Desktop/code/multi-chain-wallet/frontend/src/api/walletApi.ts"],"sourcesContent":["import api from './apiClient';\r\nimport {\r\n  Wallet,\r\n  Balance,\r\n  TokenBalance,\r\n  ChainType,\r\n  Transaction,\r\n  SignedTransaction,\r\n  CreateWalletRequest,\r\n  ImportMnemonicRequest,\r\n  ImportPrivateKeyRequest,\r\n  CreateTransactionRequest,\r\n  SignTransactionRequest,\r\n  SendTransactionRequest,\r\n  ApiResponse,\r\n} from '../types';\r\n\r\n// 钱包接口API\r\nexport const walletApi = {\r\n  // 创建钱包\r\n  createWallet: async (data: CreateWalletRequest) => {\r\n    const response = await api.post<ApiResponse<Wallet>>('/wallets', data);\r\n    if (response.code === 0) {\r\n      return response.data;\r\n    } else {\r\n      throw new Error(response.message);\r\n    }\r\n  },\r\n\r\n  // 从助记词导入钱包\r\n  importFromMnemonic: (data: ImportMnemonicRequest) => {\r\n    return api.post<string>('/wallets/import/mnemonic', data);\r\n  },\r\n\r\n  // 从私钥导入钱包\r\n  importFromPrivateKey: (data: ImportPrivateKeyRequest) => {\r\n    return api.post<string>('/wallets/import/private-key', data);\r\n  },\r\n\r\n  // 获取钱包列表\r\n  getWallets: () => {\r\n    return api.get<Wallet[]>('/wallets');\r\n  },\r\n\r\n  // 获取钱包详情\r\n  getWallet: (walletId: string) => {\r\n    return api.get<Wallet>(`/wallets/${walletId}`);\r\n  },\r\n\r\n  // 获取地址余额\r\n  getBalance: (address: string, chainType: ChainType) => {\r\n    return api.get<Balance>(`/balances/${address}`, {\r\n      params: { chainType }\r\n    });\r\n  },\r\n\r\n  // 获取代币余额\r\n  getTokenBalance: (address: string, tokenAddress: string, chainType: ChainType) => {\r\n    return api.get<TokenBalance>(`/balances/${address}/token/${tokenAddress}`, {\r\n      params: { chainType }\r\n    });\r\n  },\r\n\r\n  // 创建交易\r\n  createTransaction: (data: CreateTransactionRequest) => {\r\n    return api.post<string>('/transactions/create', data);\r\n  },\r\n\r\n  // 签名交易\r\n  signTransaction: (data: SignTransactionRequest) => {\r\n    return api.post<string>('/transactions/sign', data);\r\n  },\r\n\r\n  // 发送交易\r\n  sendTransaction: (data: SendTransactionRequest) => {\r\n    return api.post<string>('/transactions/send', data);\r\n  },\r\n\r\n  // 获取交易状态\r\n  getTransactionStatus: (txHash: string, chainType: ChainType) => {\r\n    return api.get<string>(`/transactions/${txHash}/status`, {\r\n      params: { chainType }\r\n    });\r\n  },\r\n\r\n  // 获取交易历史\r\n  getTransactionHistory: (address: string, chainType: ChainType) => {\r\n    return api.get<SignedTransaction[]>(`/transactions`, {\r\n      params: { address, chainType }\r\n    });\r\n  },\r\n};\r\n\r\nexport default walletApi; "],"mappings":"AAAA,OAAOA,GAAG,MAAM,aAAa;AAiB7B;AACA,OAAO,MAAMC,SAAS,GAAG;EACvB;EACAC,YAAY,EAAE,MAAOC,IAAyB,IAAK;IACjD,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAsB,UAAU,EAAEF,IAAI,CAAC;IACtE,IAAIC,QAAQ,CAACE,IAAI,KAAK,CAAC,EAAE;MACvB,OAAOF,QAAQ,CAACD,IAAI;IACtB,CAAC,MAAM;MACL,MAAM,IAAII,KAAK,CAACH,QAAQ,CAACI,OAAO,CAAC;IACnC;EACF,CAAC;EAED;EACAC,kBAAkB,EAAGN,IAA2B,IAAK;IACnD,OAAOH,GAAG,CAACK,IAAI,CAAS,0BAA0B,EAAEF,IAAI,CAAC;EAC3D,CAAC;EAED;EACAO,oBAAoB,EAAGP,IAA6B,IAAK;IACvD,OAAOH,GAAG,CAACK,IAAI,CAAS,6BAA6B,EAAEF,IAAI,CAAC;EAC9D,CAAC;EAED;EACAQ,UAAU,EAAEA,CAAA,KAAM;IAChB,OAAOX,GAAG,CAACY,GAAG,CAAW,UAAU,CAAC;EACtC,CAAC;EAED;EACAC,SAAS,EAAGC,QAAgB,IAAK;IAC/B,OAAOd,GAAG,CAACY,GAAG,CAAS,YAAYE,QAAQ,EAAE,CAAC;EAChD,CAAC;EAED;EACAC,UAAU,EAAEA,CAACC,OAAe,EAAEC,SAAoB,KAAK;IACrD,OAAOjB,GAAG,CAACY,GAAG,CAAU,aAAaI,OAAO,EAAE,EAAE;MAC9CE,MAAM,EAAE;QAAED;MAAU;IACtB,CAAC,CAAC;EACJ,CAAC;EAED;EACAE,eAAe,EAAEA,CAACH,OAAe,EAAEI,YAAoB,EAAEH,SAAoB,KAAK;IAChF,OAAOjB,GAAG,CAACY,GAAG,CAAe,aAAaI,OAAO,UAAUI,YAAY,EAAE,EAAE;MACzEF,MAAM,EAAE;QAAED;MAAU;IACtB,CAAC,CAAC;EACJ,CAAC;EAED;EACAI,iBAAiB,EAAGlB,IAA8B,IAAK;IACrD,OAAOH,GAAG,CAACK,IAAI,CAAS,sBAAsB,EAAEF,IAAI,CAAC;EACvD,CAAC;EAED;EACAmB,eAAe,EAAGnB,IAA4B,IAAK;IACjD,OAAOH,GAAG,CAACK,IAAI,CAAS,oBAAoB,EAAEF,IAAI,CAAC;EACrD,CAAC;EAED;EACAoB,eAAe,EAAGpB,IAA4B,IAAK;IACjD,OAAOH,GAAG,CAACK,IAAI,CAAS,oBAAoB,EAAEF,IAAI,CAAC;EACrD,CAAC;EAED;EACAqB,oBAAoB,EAAEA,CAACC,MAAc,EAAER,SAAoB,KAAK;IAC9D,OAAOjB,GAAG,CAACY,GAAG,CAAS,iBAAiBa,MAAM,SAAS,EAAE;MACvDP,MAAM,EAAE;QAAED;MAAU;IACtB,CAAC,CAAC;EACJ,CAAC;EAED;EACAS,qBAAqB,EAAEA,CAACV,OAAe,EAAEC,SAAoB,KAAK;IAChE,OAAOjB,GAAG,CAACY,GAAG,CAAsB,eAAe,EAAE;MACnDM,MAAM,EAAE;QAAEF,OAAO;QAAEC;MAAU;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC;AAED,eAAehB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}