{"ast":null,"code":"// 链类型\nexport let ChainType = /*#__PURE__*/function (ChainType) {\n  ChainType[\"ETH\"] = \"ethereum\";\n  ChainType[\"BSC\"] = \"bsc\";\n  ChainType[\"Polygon\"] = \"polygon\";\n  ChainType[\"Sepolia\"] = \"sepolia\";\n  return ChainType;\n}({});\n\n// API响应类型\n\n// 交易状态\nexport let TransactionStatus = /*#__PURE__*/function (TransactionStatus) {\n  TransactionStatus[\"Pending\"] = \"PENDING\";\n  TransactionStatus[\"Confirmed\"] = \"CONFIRMED\";\n  TransactionStatus[\"Failed\"] = \"FAILED\";\n  return TransactionStatus;\n}({});\n\n// 跨链交易状态\nexport let BridgeTransactionStatus = /*#__PURE__*/function (BridgeTransactionStatus) {\n  BridgeTransactionStatus[\"Pending\"] = \"PENDING\";\n  BridgeTransactionStatus[\"Completed\"] = \"COMPLETED\";\n  BridgeTransactionStatus[\"Failed\"] = \"FAILED\";\n  return BridgeTransactionStatus;\n}({});\n\n// 钱包信息\n\n// 余额信息\n\n// 代币余额\n\n// 交易信息\n\n// 已签名交易\n\n// 跨链交易信息\n\n// 创建钱包请求\n\n// 导入钱包请求 - 助记词\n\n// 获取余额请求\n\n// 获取代币余额请求\n\n// 创建交易请求\n\n// 签名交易请求\n\n// 发送交易请求\n\n// 跨链转账请求","map":{"version":3,"names":["ChainType","TransactionStatus","BridgeTransactionStatus"],"sources":["D:/Desktop/code/multi-chain-wallet/frontend/src/types/index.ts"],"sourcesContent":["// 链类型\r\nexport enum ChainType {\r\n  ETH = 'ethereum',\r\n  BSC = 'bsc',\r\n  Polygon = 'polygon',\r\n  Sepolia = 'sepolia'\r\n}\r\n\r\n// API响应类型\r\nexport interface ApiResponse<T> {\r\n  code: number;\r\n  message: string;\r\n  data: T;\r\n}\r\n\r\n// 交易状态\r\nexport enum TransactionStatus {\r\n  Pending = 'PENDING',\r\n  Confirmed = 'CONFIRMED',\r\n  Failed = 'FAILED'\r\n}\r\n\r\n// 跨链交易状态\r\nexport enum BridgeTransactionStatus {\r\n  Pending = 'PENDING',\r\n  Completed = 'COMPLETED',\r\n  Failed = 'FAILED'\r\n}\r\n\r\n// 钱包信息\r\nexport interface Wallet {\r\n  id: string;\r\n  address: string;\r\n  chainType: ChainType;\r\n  balance: string;\r\n  currency: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\n// 余额信息\r\nexport interface Balance {\r\n  address: string;\r\n  balance: string; // 十进制字符串\r\n  symbol: string;\r\n  chainType: ChainType;\r\n}\r\n\r\n// 代币余额\r\nexport interface TokenBalance extends Balance {\r\n  tokenAddress: string;\r\n  tokenName: string;\r\n  tokenDecimals: number;\r\n}\r\n\r\n// 交易信息\r\nexport interface Transaction {\r\n  id: string;\r\n  from: string;\r\n  to: string;\r\n  amount: string;\r\n  currency: string;\r\n  status: string;\r\n  txHash: string;\r\n  chainType: ChainType;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\n// 已签名交易\r\nexport interface SignedTransaction {\r\n  txHash: string;\r\n  signedTx: string;\r\n  chainType: ChainType;\r\n  status: TransactionStatus;\r\n  timestamp: number;\r\n}\r\n\r\n// 跨链交易信息\r\nexport interface BridgeTransaction {\r\n  txHash: string;\r\n  fromChain: ChainType | string;\r\n  toChain: ChainType | string;\r\n  fromAddress: string;\r\n  toAddress: string;\r\n  amount: string;\r\n  status: BridgeTransactionStatus | string;\r\n  createTime: number;\r\n  isTokenTransfer?: boolean;\r\n  tokenAddress?: string;\r\n}\r\n\r\n// 创建钱包请求\r\nexport interface CreateWalletRequest {\r\n  chainType: ChainType;\r\n}\r\n\r\n// 导入钱包请求 - 助记词\r\nexport interface ImportWalletRequest {\r\n  chainType: ChainType;\r\n  mnemonic?: string;\r\n  private_key?: string;\r\n}\r\n\r\n// 获取余额请求\r\nexport interface GetBalanceRequest {\r\n  chainType: ChainType;\r\n}\r\n\r\n// 获取代币余额请求\r\nexport interface GetTokenBalanceRequest {\r\n  chainType: ChainType;\r\n}\r\n\r\n// 创建交易请求\r\nexport interface CreateTransactionRequest {\r\n  from: string;\r\n  to: string;\r\n  amount: string;\r\n  chainType: ChainType;\r\n  data?: string;\r\n}\r\n\r\n// 签名交易请求\r\nexport interface SignTransactionRequest {\r\n  wallet_id: string;\r\n  tx: string;\r\n  chain_type: ChainType;\r\n}\r\n\r\n// 发送交易请求\r\nexport interface SendTransactionRequest {\r\n  wallet_id: string;\r\n  signed_tx: string;\r\n  chain_type: ChainType;\r\n}\r\n\r\n// 跨链转账请求\r\nexport interface BridgeTransferRequest {\r\n  fromChainType: ChainType;\r\n  toChainType: ChainType;\r\n  fromAddress: string;\r\n  toAddress: string;\r\n  amount: string;\r\n  tokenAddress?: string;\r\n  isTokenTransfer?: boolean;\r\n} "],"mappings":"AAAA;AACA,WAAYA,SAAS,0BAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAAA,OAATA,SAAS;AAAA;;AAOrB;;AAOA;AACA,WAAYC,iBAAiB,0BAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAA,OAAjBA,iBAAiB;AAAA;;AAM7B;AACA,WAAYC,uBAAuB,0BAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAvBA,uBAAuB;EAAA,OAAvBA,uBAAuB;AAAA;;AAMnC;;AAWA;;AAQA;;AAOA;;AAcA;;AASA;;AAcA;;AAKA;;AAOA;;AAKA;;AAKA;;AASA;;AAOA;;AAOA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}